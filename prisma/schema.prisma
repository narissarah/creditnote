generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters", "relationJoins"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
}

// Shopify Session Storage
model Session {
  id            String    @id
  shop          String
  state         String
  isOnline      Boolean   @default(false)
  scope         String?
  expires       DateTime?
  accessToken   String
  userId        BigInt?
  firstName     String?
  lastName      String?
  email         String?
  accountOwner  Boolean   @default(false)
  locale        String?
  collaborator  Boolean?  @default(false)
  emailVerified Boolean?  @default(false)
}

// Credit Note Models
model CreditNote {
  id                  String               @id @default(cuid())
  shop                String
  noteNumber          String               @unique
  customerId          String
  customerEmail       String?
  customerName        String?
  originalAmount      Float
  remainingAmount     Float
  currency            String               @default("USD")
  status              CreditStatus         @default(ACTIVE)
  reason              String?
  qrCode              String               @unique
  qrCodeImage         String               @db.Text
  qrCodeData          Json?
  originalOrderId     String?
  originalOrderNumber String?
  issuedBy            String?
  issuedByName        String?
  expiresAt           DateTime?
  createdAt           DateTime             @default(now())
  updatedAt           DateTime             @updatedAt
  transactions        CreditTransaction[]

  @@index([shop])
  @@index([customerId])
  @@index([status])
  @@index([qrCode])
}

model CreditTransaction {
  id            String           @id @default(cuid())
  creditNoteId  String
  creditNote    CreditNote       @relation(fields: [creditNoteId], references: [id])
  amount        Float
  type          TransactionType
  description   String?
  orderId       String?
  orderNumber   String?
  posDeviceId   String?
  staffId       String?
  staffName     String?
  metadata      Json?
  status        TransactionStatus @default(COMPLETED)
  createdAt     DateTime         @default(now())

  @@index([creditNoteId])
  @@index([orderId])
}

model CustomerCache {
  id                 String   @id @default(cuid())
  shop               String
  customerId         String
  totalCreditBalance Float    @default(0)
  activeCreditCount  Int      @default(0)
  metadata           Json?
  lastSyncAt         DateTime @default(now())
  syncVersion        Int      @default(1)
  createdAt          DateTime @default(now())
  updatedAt          DateTime @updatedAt

  @@unique([shop, customerId])
  @@index([customerId])
}

model OfflineSyncQueue {
  id            String       @id @default(cuid())
  shop          String
  operation     String
  operationType OperationType
  payload       Json
  retryCount    Int          @default(0)
  maxRetries    Int          @default(3)
  nextRetryAt   DateTime
  error         String?
  posDeviceId   String?
  status        SyncStatus   @default(PENDING)
  processedAt   DateTime?
  createdAt     DateTime     @default(now())

  @@index([shop, status])
  @@index([nextRetryAt])
}

model AuditLog {
  id          String   @id @default(cuid())
  shop        String
  action      String
  resource    String
  resourceId  String?
  oldValues   Json?
  newValues   Json?
  userId      String?
  userName    String?
  posDeviceId String?
  ipAddress   String?
  userAgent   String?
  createdAt   DateTime @default(now())

  @@index([shop])
  @@index([resource, resourceId])
  @@index([createdAt])
}

model ActivityLog {
  id          String   @id @default(cuid())
  shop        String
  action      String
  resource    String
  resourceId  String?
  description String?
  metadata    Json?
  userId      String?
  userName    String?
  posDeviceId String?
  createdAt   DateTime @default(now())

  @@index([shop])
  @@index([createdAt])
}

// Shop Settings for POS Extensions
model ShopSettings {
  id                    String   @id @default(cuid())
  shop                  String   @unique
  enableOfflineMode     Boolean  @default(true)
  syncInterval          Int      @default(300) // seconds
  maxOfflineHours       Int      @default(72)
  requirePinForRefund   Boolean  @default(false)
  autoApplyCredits      Boolean  @default(true)
  creditExpiryDays      Int?     @default(365)
  minCreditAmount       Float    @default(0.01)
  maxCreditAmount       Float?
  allowPartialRedemption Boolean @default(true)
  emailNotifications    Boolean  @default(true)
  posExtensionActive    Boolean  @default(false)
  createdAt             DateTime @default(now())
  updatedAt             DateTime @updatedAt
}

// Enums
enum CreditStatus {
  ACTIVE
  PARTIALLY_USED
  FULLY_USED
  EXPIRED
  CANCELLED
}

enum TransactionType {
  ISSUANCE
  REDEMPTION
  PARTIAL_REDEMPTION
  ADJUSTMENT
  CANCELLATION
  EXPIRY
}

enum TransactionStatus {
  PENDING
  COMPLETED
  FAILED
  CANCELLED
}

enum OperationType {
  CREDIT_CREATE
  CREDIT_REDEEM
  CREDIT_ADJUST
  TRANSACTION_LOG
  CUSTOMER_UPDATE
}

enum SyncStatus {
  PENDING
  PROCESSING
  COMPLETED
  FAILED
  ABANDONED
}